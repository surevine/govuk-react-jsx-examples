{"version":3,"sources":["Home.js","forms/Formik.js","App.js","index.js"],"names":["Home","className","href","target","rel","to","errorSummaryRef","React","createRef","Formik","FormValidationSchema","yup","shape","nino","required","email","when","is","then","formik","useFormik","initialValues","validateOnChange","validateOnBlur","validationSchema","onSubmit","values","console","log","JSON","stringify","setSubmitting","useEffect","isSubmitting","current","focus","errors","Helmet","Object","keys","length","ref","errorList","entries","map","error","children","handleSubmit","legend","hint","id","label","name","type","onChange","handleChange","onBlur","handleBlur","value","errorMessage","fieldset","idPrefix","items","conditional","disabled","headerProps","serviceName","navigation","App","basename","process","header","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.deace92a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Home() {\n  return (\n    <>\n      <h1 className=\"govuk-heading-xl\">govuk-react-jsx-examples</h1>\n      <h2 className=\"govuk-heading-l\">Typography</h2>\n      <p className=\"govuk-body\">\n        govuk-react-jsx makes direct use of{' '}\n        <a\n          className=\"govuk-link\"\n          href=\"https://design-system.service.gov.uk/styles/typography/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          govuk-frontend\n        </a>{' '}\n        styles for things such as typography\n      </p>\n      <h2 className=\"govuk-heading-m\">Medium Heading</h2>\n      <h3 className=\"govuk-heading-s\">Small Heading</h3>\n      <p className=\"govuk-body-l\">Large paragraph</p>\n      <p className=\"govuk-body\">Standard paragraph</p>\n      <p className=\"govuk-body-s\">Small paragraph</p>\n\n      <h2 className=\"govuk-heading-l\">Form demos</h2>\n      <ul className=\"govuk-list govuk-list--bullet\">\n        <li>\n          <Link className=\"govuk-link\" to=\"/forms/formik\">\n            Formik\n          </Link>\n        </li>\n        <li>\n          <Link className=\"govuk-link\" to=\"/forms/react-hook-form\">\n            React hook form\n          </Link>\n        </li>\n      </ul>\n    </>\n  );\n}\n\nexport { Home };\n","import React, { useEffect } from 'react';\nimport {\n  Button,\n  Input,\n  ErrorSummary,\n  Checkboxes,\n  Radios,\n  Select,\n  Textarea,\n  Fieldset,\n} from 'govuk-react-jsx';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Helmet } from 'react-helmet';\n\nconst errorSummaryRef = React.createRef();\n\nfunction Formik() {\n  const FormValidationSchema = yup.object().shape({\n    nino: yup.string().required('Custom validation message example'),\n    'favourite-colour': yup.string().required(),\n    'yes-no': yup.string().required(),\n    'select-1': yup.string().required(),\n    'more-detail': yup.string().required(),\n    'how-contacted': yup.string(),\n    email: yup.string().when('how-contacted', {\n      is: 'email',\n      then: yup.string().required(),\n    }),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      nino: '',\n      'favourite-colour': '',\n      'yes-no': 'yes',\n      'select-1': '1',\n      'more-detail': '',\n      'how-contacted': '',\n      email: '',\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema: FormValidationSchema,\n    onSubmit: (values) => {\n      console.log(JSON.stringify(values, null, 2));\n      formik.setSubmitting(false);\n    },\n  });\n\n  // Focus the error summary when people click on the submit button\n  useEffect(() => {\n    if (formik.isSubmitting && errorSummaryRef.current) {\n      errorSummaryRef.current.focus();\n    }\n  }, [formik.errors, formik.isSubmitting]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Formik example</title>\n      </Helmet>\n\n      <h1 className=\"govuk-heading-xl\">\n        Formik example\n        <span className=\"govuk-caption-m\">\n          <a\n            className=\"govuk-link\"\n            href=\"https://github.com/jaredpalmer/formik\"\n          >\n            (github/formik)\n          </a>\n        </span>\n      </h1>\n\n      <p className=\"govuk-body\">\n        Also using <a href=\"https://github.com/jquense/yup\">yup</a> for\n        validation. Base library will work without yup, and conditional\n        validation is possible via the validate callback, but Yup has been used\n        for consistency with the other form demos and because it's just cleaner\n        in my opinion. But feel free to use something else, or just write a\n        validate callback yourself.\n      </p>\n\n      <hr className=\"govuk-section-break govuk-section-break--xl govuk-section-break--visible\" />\n\n      <div className=\"govuk-grid-row\">\n        <div className=\"govuk-grid-column-two-thirds\">\n          {Object.keys(formik.errors).length !== 0 && (\n            <ErrorSummary\n              ref={errorSummaryRef}\n              errorList={Object.entries(formik.errors).map((error) => ({\n                href: `#${error[0]}`,\n                children: error[1],\n              }))}\n            />\n          )}\n\n          <form onSubmit={formik.handleSubmit}>\n            <Fieldset\n              legend={{\n                children: 'Form elements',\n                className: 'govuk-fieldset__legend--l',\n              }}\n            >\n              <Input\n                hint={{\n                  children:\n                    'It’s on your National Insurance card, benefit letter, payslip or P60. For example, ‘QQ 12 34 56 C’.',\n                }}\n                id=\"nino\"\n                label={{\n                  children: 'National insurance number',\n                }}\n                name=\"nino\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.nino}\n                {...(formik.errors.nino && {\n                  errorMessage: {\n                    children: formik.errors.nino,\n                  },\n                })}\n              />\n\n              <Checkboxes\n                fieldset={{\n                  legend: {\n                    children: 'How do you want to be contacted?',\n                  },\n                }}\n                idPrefix=\"how-contacted\"\n                name=\"how-contacted\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values['how-contacted']}\n                {...(formik.errors['how-contacted'] && {\n                  errorMessage: {\n                    children: formik.errors['how-contacted'],\n                  },\n                })}\n                items={[\n                  {\n                    children: 'Email',\n                    conditional: {\n                      children: (\n                        <Input\n                          id=\"email\"\n                          label={{\n                            children: 'Email',\n                          }}\n                          name=\"email\"\n                          type=\"text\"\n                          onChange={formik.handleChange}\n                          onBlur={formik.handleBlur}\n                          value={formik.values.email}\n                          {...(formik.errors.email && {\n                            errorMessage: {\n                              children: formik.errors.email,\n                            },\n                          })}\n                        />\n                      ),\n                    },\n                    value: 'email',\n                  },\n                ]}\n              />\n              <Radios\n                fieldset={{\n                  legend: {\n                    children: 'Which is your favourite colour?',\n                  },\n                }}\n                idPrefix=\"favourite-colour\"\n                name=\"favourite-colour\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values['favourite-colour']}\n                {...(formik.errors['favourite-colour'] && {\n                  errorMessage: {\n                    children: formik.errors['favourite-colour'],\n                  },\n                })}\n                items={[\n                  {\n                    children: 'Red',\n                    value: 'red',\n                  },\n                  {\n                    children: 'Green',\n                    value: 'green',\n                  },\n                  {\n                    children: 'Yellow',\n                    value: 'yellow',\n                  },\n                ]}\n              />\n\n              <Radios\n                fieldset={{\n                  legend: {\n                    children: 'Radios with a default value',\n                  },\n                }}\n                idPrefix=\"yes-no\"\n                name=\"yes-no\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values['yes-no']}\n                {...(formik.errors['yes-no'] && {\n                  errorMessage: {\n                    children: formik.errors['yes-no'],\n                  },\n                })}\n                items={[\n                  {\n                    children: 'Yes',\n                    value: 'yes',\n                  },\n                  {\n                    children: 'No',\n                    value: 'no',\n                  },\n                ]}\n              />\n\n              <Select\n                id=\"select-1\"\n                items={[\n                  {\n                    children: 'GOV.UK frontend option 1',\n                    value: 1,\n                  },\n                  {\n                    children: 'GOV.UK frontend option 2',\n                    value: 2,\n                  },\n                  {\n                    children: 'GOV.UK frontend option 3',\n                    disabled: true,\n                    value: 3,\n                  },\n                ]}\n                label={{\n                  children: 'Label text goes here',\n                }}\n                name=\"select-1\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values['select-1']}\n                {...(formik.errors['select-1'] && {\n                  errorMessage: {\n                    children: formik.errors['select-1'],\n                  },\n                })}\n              />\n\n              <Textarea\n                hint={{\n                  children:\n                    'Don’t include personal or financial information, eg your National Insurance number or credit card details.',\n                }}\n                id=\"more-detail\"\n                label={{\n                  children: 'Can you provide more detail?',\n                }}\n                name=\"more-detail\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values['more-detail']}\n                {...(formik.errors['more-detail'] && {\n                  errorMessage: {\n                    children: formik.errors['more-detail'],\n                  },\n                })}\n              />\n\n              <Button type=\"submit\">Submit</Button>\n            </Fieldset>\n          </form>\n        </div>\n\n        <div className=\"govuk-grid-column-one-third\">\n          <h2 className=\"govuk-heading-l\">Form data</h2>\n          <code>\n            <pre>{JSON.stringify(formik.values, null, 2)}</pre>\n          </code>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport { Formik };\n","import React from 'react';\nimport { Template } from 'govuk-react-jsx';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { Home } from './Home';\n// import { ReactHookForm } from './forms/ReactHookForm';\nimport { Formik } from './forms/Formik';\n\nconst headerProps = {\n  serviceName: 'govuk-react-jsx examples',\n  navigation: [\n    {\n      children: 'Formik',\n      to: '/forms/formik',\n    },\n    // {\n    //   children: 'React hook form',\n    //   to: '/forms/react-hook-form',\n    // },\n  ],\n};\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Template header={headerProps}>\n        <Helmet>\n          <title>govuk-react-jsx examples</title>\n        </Helmet>\n\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        {/* \n        <Route path=\"/forms/react-hook-form\">\n          <ReactHookForm />\n        </Route> */}\n\n        <Route path=\"/forms/formik\">\n          <Formik />\n        </Route>\n      </Template>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}